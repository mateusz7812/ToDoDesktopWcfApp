//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WpfClientApp.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ToDo", Namespace="http://schemas.datacontract.org/2004/07/ToDoLibrary")]
    [System.SerializableAttribute()]
    public partial class ToDo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CompletedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DeadlineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RatingField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Completed {
            get {
                return this.CompletedField;
            }
            set {
                if ((this.CompletedField.Equals(value) != true)) {
                    this.CompletedField = value;
                    this.RaisePropertyChanged("Completed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Deadline {
            get {
                return this.DeadlineField;
            }
            set {
                if ((this.DeadlineField.Equals(value) != true)) {
                    this.DeadlineField = value;
                    this.RaisePropertyChanged("Deadline");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Rating {
            get {
                return this.RatingField;
            }
            set {
                if ((this.RatingField.Equals(value) != true)) {
                    this.RatingField = value;
                    this.RaisePropertyChanged("Rating");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IToDoService")]
    public interface IToDoService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IToDoService/AddToDo", ReplyAction="http://tempuri.org/IToDoService/AddToDoResponse")]
        bool AddToDo(WpfClientApp.ServiceReference1.ToDo todo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IToDoService/AddToDo", ReplyAction="http://tempuri.org/IToDoService/AddToDoResponse")]
        System.Threading.Tasks.Task<bool> AddToDoAsync(WpfClientApp.ServiceReference1.ToDo todo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IToDoService/MarkToDoCompleted", ReplyAction="http://tempuri.org/IToDoService/MarkToDoCompletedResponse")]
        bool MarkToDoCompleted(int index);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IToDoService/MarkToDoCompleted", ReplyAction="http://tempuri.org/IToDoService/MarkToDoCompletedResponse")]
        System.Threading.Tasks.Task<bool> MarkToDoCompletedAsync(int index);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IToDoService/DeleteToDo", ReplyAction="http://tempuri.org/IToDoService/DeleteToDoResponse")]
        bool DeleteToDo(int index);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IToDoService/DeleteToDo", ReplyAction="http://tempuri.org/IToDoService/DeleteToDoResponse")]
        System.Threading.Tasks.Task<bool> DeleteToDoAsync(int index);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IToDoService/GetToDoDescription", ReplyAction="http://tempuri.org/IToDoService/GetToDoDescriptionResponse")]
        string GetToDoDescription(int index);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IToDoService/GetToDoDescription", ReplyAction="http://tempuri.org/IToDoService/GetToDoDescriptionResponse")]
        System.Threading.Tasks.Task<string> GetToDoDescriptionAsync(int index);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IToDoServiceChannel : WpfClientApp.ServiceReference1.IToDoService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ToDoServiceClient : System.ServiceModel.ClientBase<WpfClientApp.ServiceReference1.IToDoService>, WpfClientApp.ServiceReference1.IToDoService {
        
        public ToDoServiceClient() {
        }
        
        public ToDoServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ToDoServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ToDoServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ToDoServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool AddToDo(WpfClientApp.ServiceReference1.ToDo todo) {
            return base.Channel.AddToDo(todo);
        }
        
        public System.Threading.Tasks.Task<bool> AddToDoAsync(WpfClientApp.ServiceReference1.ToDo todo) {
            return base.Channel.AddToDoAsync(todo);
        }
        
        public bool MarkToDoCompleted(int index) {
            return base.Channel.MarkToDoCompleted(index);
        }
        
        public System.Threading.Tasks.Task<bool> MarkToDoCompletedAsync(int index) {
            return base.Channel.MarkToDoCompletedAsync(index);
        }
        
        public bool DeleteToDo(int index) {
            return base.Channel.DeleteToDo(index);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteToDoAsync(int index) {
            return base.Channel.DeleteToDoAsync(index);
        }
        
        public string GetToDoDescription(int index) {
            return base.Channel.GetToDoDescription(index);
        }
        
        public System.Threading.Tasks.Task<string> GetToDoDescriptionAsync(int index) {
            return base.Channel.GetToDoDescriptionAsync(index);
        }
    }
}
